{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}},"post_list":[{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"思维","date":"2022-10-05T13:59:32.131Z","updated":"2022-10-05T13:59:32.131Z","comments":true,"path":"api/articles/思维.json","keywords":null,"cover":null,"text":" codeforces#823-div2-B 题意：一维坐标系有n个人，各自的坐标为xix_ixi​，每个人需要ti的时间才能出发，问需要多长时间才能让所有人聚集到一个地方 解答：若每个人所需要的时间tit_iti​都是0的话，则答案为xmax+xmin2\\frac{x_{max...","link":"","photos":[],"count_time":{"symbolsCount":538,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"思维","uid":"8a05039005e8271de59259f4550f4e1d","slug":"思维1500-1700","date":"2022-10-05T08:09:56.000Z","updated":"2022-10-06T08:59:06.958Z","comments":true,"path":"api/articles/思维1500-1700.json","keywords":null,"cover":null,"text":" codeforces#823-div2-B 题意：一维坐标系有n个人，各自的坐标为xix_ixi​，每个人需要ti的时间才能出发，问需要多长时间才能让所有人聚集到一个地方 解答：若每个人所需要的时间tit_iti​都是0的话，则答案为xmax+xmin2\\frac{x_{max...","link":"","photos":[],"count_time":{"symbolsCount":918,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2022-09-28T02:43:27.000Z","updated":"2022-09-28T08:02:23.629Z","comments":true,"path":"api/articles/二分.json","keywords":null,"cover":null,"text":" 二分答案 前提：满足答案单调性，当求解一个问题过程需要考虑的因素比较复杂，很难通过已知要素直接推断出结果，而且因素之间互相影响， 则考虑二分答案，或者更明显的求最小值的最大值，最大值的最小值 格式 不断缩减解空间的大小，整数缩减到1，浮点数缩减到精度eps int l, r; ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"数据结构","uid":"81579b6c641dedc829a2b0058112fc0c","slug":"数据结构","date":"2022-07-27T10:16:02.000Z","updated":"2022-07-28T12:39:54.099Z","comments":true,"path":"api/articles/数据结构.json","keywords":null,"cover":null,"text":" 1.RMQ-st表 离线查询区间最值 template&lt;class T, class Cmp &#x3D; less&lt;T&gt;&gt; &#x2F;&#x2F;定义模版：数据类型和比较方式，默认广义小于 struct RMQ&#123; const int n;&...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"math","uid":"d176c206991d53e1e298250d745ffd4f","slug":"math","date":"2022-07-22T13:11:52.000Z","updated":"2022-10-04T05:20:26.117Z","comments":true,"path":"api/articles/math.json","keywords":null,"cover":null,"text":" 给出一个数，输出它的所有素因子 1&lt;x&lt;1091&lt;x&lt;10^91&lt;x&lt;109 解析：由质数分解定理，即任意x&gt;2x &gt; 2x&gt;2可以表示为 x = {p_1}^{k_1}*{p_2}^{k_2}*{p_3}^{k_3}*{p...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"队列","uid":"1840725987698b4cef5a9ce40df0584c","slug":"队列","date":"2022-06-22T04:50:06.000Z","updated":"2022-06-26T17:16:45.378Z","comments":true,"path":"api/articles/队列.json","keywords":null,"cover":null,"text":" 栈 出栈排序 给出一个入栈顺序，是一个1～n的排序，求字典序最大的出栈顺序 对当前元素入队，如果栈顶元素大于之后的所有元素，出栈 队列 插队 给出若干进队出队信息，如果出队则一定是从队头出队，如果入队则分为正常入队和插队入队，题目保证当所有信息给出后所有进队的人都已出队，且一个...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"特殊的数据结构","uid":"cf16dcad745c39bc496f066c73c8929e","slug":"特殊的数据结构","date":"2022-05-21T14:49:59.000Z","updated":"2022-05-21T14:53:34.100Z","comments":true,"path":"api/articles/特殊的数据结构.json","keywords":null,"cover":null,"text":" 维护序列中最小未出现过的非负整数，支持插入，查询，删除 用一个数组记录每个数出现过的次数，用set维护一个按大小排列的未出现过数 int cot[maxnum]; set&lt;int&gt;st; int m; int op, x; void solve() &#123; f...","link":"","photos":[],"count_time":{"symbolsCount":613,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"cf-792-div1+2","uid":"ec879031a4be3590103f0fd58b750e46","slug":"cf-792-div1-2","date":"2022-05-20T15:40:39.000Z","updated":"2022-07-25T05:06:12.251Z","comments":true,"path":"api/articles/cf-792-div1-2.json","keywords":null,"cover":null,"text":" C 题意：给定一个矩阵，你可以将任意两列交换至多一次，问能否使矩阵每一行不下降 方法：读入矩阵，对每一行重新排序，若与原序列不同则加入有问题数组，数组长度大于2则不可能交换一次解决，否则将矩阵交换该两列，看是否满足答案 题意：给定一个2行n列的矩阵，可以任意交换两列，问能否使矩...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"搜索","uid":"3ae07ab74ec1bcb36882cc1ce0d929c6","slug":"搜索","date":"2022-05-12T00:57:55.000Z","updated":"2022-07-22T13:05:00.646Z","comments":true,"path":"api/articles/搜索.json","keywords":null,"cover":null,"text":" 搜索剪枝 小木棍 有一些同样长的小木棍，将这些木棍随意切割，得到若干小木棍，已知这些小木棍的长度，求最小的初始木棍原长 1.搜索 根据一根木棍的拼接来确定搜索的参数，设立： 还有多少木棍没有进行拼接 当前拼接的木棍还需要多少长度 目标木棍长度 现在处理第几根木棍 vector&...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"技巧","uid":"c415bd8a15236b765141e56b25f1f835","slug":"技巧","date":"2022-05-11T15:58:56.000Z","updated":"2022-10-05T13:33:20.426Z","comments":true,"path":"api/articles/技巧.json","keywords":null,"cover":null,"text":"$ 用逻辑尺来暴力枚举对于n个状态的取舍的2^n种情况 $ for (int i&#x3D;0;i&lt;(1&lt;&lt;n);++i)&#123; for (int j&#x3D;0;j&lt;n;++i)&#123; if(i&lt;&lt;j&amp;1)&#123; ...","link":"","photos":[],"count_time":{"symbolsCount":886,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"算法竞赛入门经典","uid":"3f75e6c48899ccc9cfffa214dd7d68de","slug":"算法竞赛入门经典","date":"2022-05-02T13:26:37.000Z","updated":"2022-05-02T13:34:28.326Z","comments":true,"path":"api/articles/算法竞赛入门经典.json","keywords":null,"cover":null,"text":" 1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串 暴力思路：检查所有偶数长度的子串，检查其是否为前缀后缀相同的子串 优化思路：由于求字典序，只需判断当前字符串的所有后缀子串是否满足条件，从左往右推进，检查当前字符串 int ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"cf-785-div2","uid":"e24161b022b99e01e5ff1a820d3ba3c0","slug":"cf-785-div2","date":"2022-05-02T01:26:10.000Z","updated":"2022-05-02T07:09:54.445Z","comments":true,"path":"api/articles/cf-785-div2.json","keywords":null,"cover":null,"text":" C 题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示 方法： 先枚举回文数 bool check(int x)&#123; int n&#x3D;0,xx&#x3D;x; while(x)&#123; n&#x3D;n*10+s%10; x&#x2...","link":"","photos":[],"count_time":{"symbolsCount":978,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"二叉堆","uid":"1f95e29524cb1fc8f16f7dbdf365181a","slug":"二叉堆","date":"2022-04-27T06:23:23.000Z","updated":"2022-04-27T06:34:35.691Z","comments":true,"path":"api/articles/二叉堆.json","keywords":null,"cover":null,"text":"&#x2F;&#x2F;手动实现 void shift(int i)&#123; while(1)&#123; int l&#x3D;2*i; if(l&lt;&#x3D;len-1&amp;&amp;a[l]&gt;a[l+1])l++; if(l&gt;len||a[i]&l...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"cf-783-div2","uid":"fa4d4536e5d7115952b0289a4a257f8c","slug":"cf-783-div2","date":"2022-04-20T03:13:31.000Z","updated":"2022-05-17T15:46:45.295Z","comments":true,"path":"api/articles/cf-783-div2.json","keywords":null,"cover":[],"text":" C 题意：给出长度为n的序列a,长度为n的序列b中初始值全是0,每次操作可以让加上或者减去,问最少操作多少次才能使变成一个严格单调递增的序列. 方法：贪心的考虑，最终数组一定会有0存在，枚举0的位置，依次计算达到严格单调递增所需要移动的次数 int main()&#123; n...","link":"","photos":[],"count_time":{"symbolsCount":863,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"树状数组2","uid":"75693a8c6f85806ac837bdc72f35a1c0","slug":"树状数组2","date":"2022-04-19T08:42:09.000Z","updated":"2022-04-19T08:42:23.468Z","comments":true,"path":"api/articles/树状数组2.json","keywords":null,"cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; #define ll long long #define MAX 500005 using namespace std; ll read()&#123; char c&#x3D;getchar();ll x&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"树状数组1","uid":"a9af62bfd9db986968c6d2172b939d09","slug":"树状数组1","date":"2022-04-19T06:36:42.000Z","updated":"2022-04-19T06:38:14.421Z","comments":true,"path":"api/articles/树状数组1.json","keywords":null,"cover":[],"text":"#include&lt;bits&#x2F;stdc++.h&gt; #define ll long long #define MAX 500001 using namespace std; ll read()&#123; char c&#x3D;getchar();ll x&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"进制转换","uid":"3a5edbaf2fab1786cda1ddc2eee70e29","slug":"进制转换","date":"2022-04-06T05:30:25.000Z","updated":"2022-04-06T06:07:18.808Z","comments":true,"path":"api/articles/进制转换.json","keywords":null,"cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; using namespace std; int n,m,ans; void otp(int x)&#123; if(!x) return; otp(x&#x2F;m); char s&#x3D;x%m&gt;...","link":"","photos":[],"count_time":{"symbolsCount":659,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"算法讲解","uid":"5757d25a41334dab48eea89b5201dea3","slug":"算法讲解","date":"2022-04-05T07:34:09.000Z","updated":"2022-04-05T07:35:37.790Z","comments":true,"path":"api/articles/算法讲解.json","keywords":null,"cover":null,"text":" 有向图强连通分量的Tarjan算法 https://byvoid.com/zhs/blog/scc-tarjan/ ","link":"","photos":[],"count_time":{"symbolsCount":59,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":2,"path":"api/categories/教程.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"集合","date":"2022-04-04T04:58:47.000Z","updated":"2022-04-04T05:02:22.012Z","comments":true,"path":"api/articles/集合.json","keywords":null,"cover":null,"text":" 题目要求 Caima 给你了所有**[a,b]**范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 p的公共质因数，那么把它们所在的集合合并。重复如上操作，直到没有可以合并的集合为止。现在 Caima 想知道，最后有...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"},{"name":"埃尔筛法","slug":"埃尔筛法","count":1,"path":"api/tags/埃尔筛法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2022-04-03T10:34:08.000Z","updated":"2022-07-22T12:07:10.748Z","comments":true,"path":"api/articles/并查集.json","keywords":null,"cover":null,"text":" 并查集 意义： 可以表示某一类东西是同种类，可以表示连通块，可以表示某几件事情有关系，具体什么关系再设计一个维度计算 食物链中的带权并查集，如果两个动物有关系，就划分到同一区域，具体什么关系再推导一下 01字符串的某一子串的含1数量是奇数还是偶数，可以利用前缀的思想分成两段，则...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"share","uid":"d78199dbabc681e201328dc8f8002dc2","slug":"share","date":"2022-01-22T09:06:40.000Z","updated":"2022-01-22T09:06:40.237Z","comments":true,"path":"api/articles/share.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"test","uid":"bc567916c4dc0d8169bd26d18e348d36","slug":"test","date":"2022-01-10T15:11:45.000Z","updated":"2022-01-10T15:35:15.715Z","comments":true,"path":"api/articles/test.json","keywords":null,"cover":null,"text":":::tip 注意了，这是个tip ::: :::tip 标题 哈哈，自定义 ::: :::warning 警告一次！ ::: :::details 点开看看 你个傻逼 ::: ","link":"","photos":[],"count_time":{"symbolsCount":89,"symbolsTime":"1 mins."},"categories":[{"name":"测试","slug":"测试","count":1,"path":"api/categories/测试.json"}],"tags":[{"name":"开发者","slug":"开发者","count":3,"path":"api/tags/开发者.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"年度总结","uid":"6181be25ee551197b04a134e589faeae","slug":"my2021","date":"2021-12-31T13:12:12.000Z","updated":"2021-12-31T15:31:57.540Z","comments":true,"path":"api/articles/my2021.json","keywords":null,"cover":null,"text":" 再见，2021 收获 走过了一年，虽然一路上坎坎坷坷，但还是有很多快乐和值得纪念的事情😙 我转专业成功了 从机类转到计算机相关专业，虽然转专业之后的部分课程并不是我想象中的那么美好，但我还是觉得幸运，感谢当时果断做决定的自己。 我参加了十四运会志愿者队伍 对于一个普通人而言，能...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"总结","slug":"总结","count":1,"path":"api/categories/总结.json"}],"tags":[{"name":"开发者","slug":"开发者","count":3,"path":"api/tags/开发者.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"PTA数据结构08","uid":"b48181ff5fc549c282670b2e3976c524","slug":"PTA数据结构08","date":"2021-12-01T04:36:21.000Z","updated":"2021-12-31T15:00:08.319Z","comments":true,"path":"api/articles/PTA数据结构08.json","keywords":null,"cover":null,"text":" 题目要求 ​ 因为一棵二叉树的遍历可以用堆栈来模拟，故现在通过输入模拟堆栈的出入栈过程，据此建立一棵二叉树，并将其后序遍历结果输出 Input Specification: 6 Push 1 Push 2 Push 3 Pop Pop Push 4 Pop Pop Push 5...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"题目集","slug":"题目集","count":2,"path":"api/categories/题目集.json"}],"tags":[{"name":"PTA","slug":"PTA","count":2,"path":"api/tags/PTA.json"},{"name":"树","slug":"树","count":1,"path":"api/tags/树.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"PTA数据结构05","uid":"c64fb311e63f4c1eefb237f294f60a66","slug":"PTA数据结构05","date":"2021-11-26T16:27:54.000Z","updated":"2021-12-01T04:35:29.335Z","comments":true,"path":"api/articles/PTA数据结构05.json","keywords":null,"cover":null,"text":" 题目要求 给定一个最大能储存M个元素的栈，以1～N的顺序入栈，并同时随机出栈，编写程序对给出的K个拟定的出栈队列进行判定，存在输出&quot;YES&quot;,否则&quot;NO&quot; Input Specification: 第一行依次为M、N、K，后跟K行样例 5...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"题目集","slug":"题目集","count":2,"path":"api/categories/题目集.json"}],"tags":[{"name":"PTA","slug":"PTA","count":2,"path":"api/tags/PTA.json"},{"name":"线性结构","slug":"线性结构","count":1,"path":"api/tags/线性结构.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"博客介绍","uid":"1f2e6374a67016c059eddb723ab0efc5","slug":"博客介绍","date":"2021-11-26T05:38:30.000Z","updated":"2021-12-28T14:55:16.241Z","comments":true,"path":"api/articles/博客介绍.json","keywords":null,"cover":null,"text":" 这是一个怎样的博客？ 博客性质 个人博客，分享生活感悟 记录博客，分享学习心得 你能在这里收获什么 了解开发者的心路历程，与开发者共情（反正就是好朋友 😠） 学习上获得帮助：本站主要是技术内容的分享 如何使用本站？ 通过tag或category标签来检索内容 合理设置关键字，在...","link":"","photos":[],"count_time":{"symbolsCount":182,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":2,"path":"api/categories/教程.json"}],"tags":[{"name":"开发者","slug":"开发者","count":3,"path":"api/tags/开发者.json"},{"name":"入站必读","slug":"入站必读","count":1,"path":"api/tags/入站必读.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}],"categories":5,"tags":12,"word_count":"38k","post_count":26}