{"total":28,"pageSize":13,"pageCount":3,"data":[{"title":"dp入门","uid":"8b03c71c44a90bad729a0bac36f3314d","slug":"dp入门","date":"2022-11-15T00:32:38.000Z","updated":"2022-11-15T02:01:09.804Z","comments":true,"path":"api/articles/dp入门.json","cover":null,"text":"线性dp技巧 概率相关的dp可以转化为计数dp 求最小值要全体赋值并初始化状态 dp构造方法：考虑题目每个要素是否可以作为枚举时的一个维度，考虑转移是否方便，复杂度等问题 贪心地进行转移：在转移过程中若当前状态可以有多种转移的手段，有时只需贪心的取其中的极端情况 求起点到终点，终...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"思维1500-1700","uid":"fdc2d967139f06c1554f41a568731c4c","slug":"思维1500-1700","date":"2022-11-15T00:26:17.000Z","updated":"2022-11-15T00:26:24.074Z","comments":true,"path":"api/articles/思维1500-1700.json","cover":null,"text":" codeforces#823-div2-B 题意：一维坐标系有n个人，各自的坐标为xix_ixi​，每个人需要ti的时间才能出发，问需要多长时间才能让所有人聚集到一个地方 解答：若每个人所需要的时间tit_iti​都是0的话，则答案为xmax+xmin2\\frac{x_{max...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"stl","uid":"cc7bcd220daea072f74b86bf01fbbc13","slug":"stl","date":"2022-11-15T00:22:26.000Z","updated":"2022-11-15T00:25:00.815Z","comments":true,"path":"api/articles/stl.json","cover":null,"text":" bitset 利用类似intintint二进制的形式来储存01数组 ","link":"","photos":[],"count_time":{"symbolsCount":35,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"字符串","uid":"2ad97caedbe70f5538e534c5bcf7404f","slug":"字符串","date":"2022-11-14T12:22:08.000Z","updated":"2022-11-14T12:52:47.595Z","comments":true,"path":"api/articles/字符串.json","cover":null,"text":" 最长回文串 定义数组ddd，did_idi​是以下标为iii的字符为中心的最长回文串的半径（若字符串的长度不是奇数，则添加无关字符） 初始化l=0,r=−1l=0, r = -1l=0,r=−1，从左到右遍历字符串 若iii大于rrr，直接中心向外扩展 考虑iii的对称点j=l...","link":"","photos":[],"count_time":{"symbolsCount":373,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2022-09-28T02:43:27.000Z","updated":"2022-09-28T08:02:23.629Z","comments":true,"path":"api/articles/二分.json","cover":null,"text":" 二分答案 前提：满足答案单调性，当求解一个问题过程需要考虑的因素比较复杂，很难通过已知要素直接推断出结果，而且因素之间互相影响， 则考虑二分答案，或者更明显的求最小值的最大值，最大值的最小值 格式 不断缩减解空间的大小，整数缩减到1，浮点数缩减到精度eps int l, r; ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"数据结构","uid":"81579b6c641dedc829a2b0058112fc0c","slug":"数据结构","date":"2022-07-27T10:16:02.000Z","updated":"2022-07-28T12:39:54.099Z","comments":true,"path":"api/articles/数据结构.json","cover":null,"text":" 1.RMQ-st表 离线查询区间最值 template&lt;class T, class Cmp &#x3D; less&lt;T&gt;&gt; &#x2F;&#x2F;定义模版：数据类型和比较方式，默认广义小于 struct RMQ&#123; const int n;&...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"math","uid":"d176c206991d53e1e298250d745ffd4f","slug":"math","date":"2022-07-22T13:11:52.000Z","updated":"2022-10-08T09:03:42.060Z","comments":true,"path":"api/articles/math.json","cover":null,"text":" 质数分解定理：$$x = {p_1}{k_1}*{p_2}{k_2}{p_3}{k_3}*{p_4}{k_4}···{p_n}^{k_n}$$ &#x2F;&#x2F;试除法 int x; for (int i &#x3D; 2; i * i &lt;&#x3D; x; ++i...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"队列","uid":"1840725987698b4cef5a9ce40df0584c","slug":"队列","date":"2022-06-22T04:50:06.000Z","updated":"2022-06-26T17:16:45.378Z","comments":true,"path":"api/articles/队列.json","cover":null,"text":" 栈 出栈排序 给出一个入栈顺序，是一个1～n的排序，求字典序最大的出栈顺序 对当前元素入队，如果栈顶元素大于之后的所有元素，出栈 队列 插队 给出若干进队出队信息，如果出队则一定是从队头出队，如果入队则分为正常入队和插队入队，题目保证当所有信息给出后所有进队的人都已出队，且一个...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"特殊的数据结构","uid":"cf16dcad745c39bc496f066c73c8929e","slug":"特殊的数据结构","date":"2022-05-21T14:49:59.000Z","updated":"2022-05-21T14:53:34.100Z","comments":true,"path":"api/articles/特殊的数据结构.json","cover":null,"text":" 维护序列中最小未出现过的非负整数，支持插入，查询，删除 用一个数组记录每个数出现过的次数，用set维护一个按大小排列的未出现过数 int cot[maxnum]; set&lt;int&gt;st; int m; int op, x; void solve() &#123; f...","link":"","photos":[],"count_time":{"symbolsCount":613,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"cf-792-div1+2","uid":"ec879031a4be3590103f0fd58b750e46","slug":"cf-792-div1-2","date":"2022-05-20T15:40:39.000Z","updated":"2022-07-25T05:06:12.251Z","comments":true,"path":"api/articles/cf-792-div1-2.json","cover":null,"text":" C 题意：给定一个矩阵，你可以将任意两列交换至多一次，问能否使矩阵每一行不下降 方法：读入矩阵，对每一行重新排序，若与原序列不同则加入有问题数组，数组长度大于2则不可能交换一次解决，否则将矩阵交换该两列，看是否满足答案 题意：给定一个2行n列的矩阵，可以任意交换两列，问能否使矩...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"搜索","uid":"3ae07ab74ec1bcb36882cc1ce0d929c6","slug":"搜索","date":"2022-05-12T00:57:55.000Z","updated":"2022-07-22T13:05:00.646Z","comments":true,"path":"api/articles/搜索.json","cover":null,"text":" 搜索剪枝 小木棍 有一些同样长的小木棍，将这些木棍随意切割，得到若干小木棍，已知这些小木棍的长度，求最小的初始木棍原长 1.搜索 根据一根木棍的拼接来确定搜索的参数，设立： 还有多少木棍没有进行拼接 当前拼接的木棍还需要多少长度 目标木棍长度 现在处理第几根木棍 vector&...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"技巧","uid":"c415bd8a15236b765141e56b25f1f835","slug":"技巧","date":"2022-05-11T15:58:56.000Z","updated":"2022-10-05T13:33:20.426Z","comments":true,"path":"api/articles/技巧.json","cover":null,"text":"$ 用逻辑尺来暴力枚举对于n个状态的取舍的2^n种情况 $ for (int i&#x3D;0;i&lt;(1&lt;&lt;n);++i)&#123; for (int j&#x3D;0;j&lt;n;++i)&#123; if(i&lt;&lt;j&amp;1)&#123; ...","link":"","photos":[],"count_time":{"symbolsCount":886,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"算法竞赛入门经典","uid":"3f75e6c48899ccc9cfffa214dd7d68de","slug":"算法竞赛入门经典","date":"2022-05-02T13:26:37.000Z","updated":"2022-05-02T13:34:28.326Z","comments":true,"path":"api/articles/算法竞赛入门经典.json","cover":null,"text":" 1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串 暴力思路：检查所有偶数长度的子串，检查其是否为前缀后缀相同的子串 优化思路：由于求字典序，只需判断当前字符串的所有后缀子串是否满足条件，从左往右推进，检查当前字符串 int ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}]}