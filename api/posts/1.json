{"total":15,"pageSize":13,"pageCount":2,"data":[{"title":"线段树1","uid":"da049d4802afb8f23eb9317447dbf0d1","slug":"线段树1","date":"2022-04-17T13:15:53.000Z","updated":"2022-04-17T13:16:55.632Z","comments":true,"path":"api/articles/线段树1.json","cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; #define MAXN 100001 &#x2F;&#x2F;线段数模版 &#x2F;&#x2F;查询：区间和 &#x2F;&#x2F;更改：区间每个数加k using namespace std; long...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"st表","uid":"f6c19d68f103e4d846ec55d23a2ae394","slug":"st表","date":"2022-04-16T15:49:50.000Z","updated":"2022-04-17T13:16:19.072Z","comments":true,"path":"api/articles/st表.json","cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; using namespace std; int n,m,l,r; int a[max_n][max_n的2进制最高位]; inline int read()&#123; char c&#x3D;getchar...","link":"","photos":[],"count_time":{"symbolsCount":884,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"头文件","uid":"035226029ada45b479a35ef3c152f51f","slug":"头文件","date":"2022-04-16T14:10:35.000Z","updated":"2022-04-16T14:11:04.679Z","comments":true,"path":"api/articles/头文件.json","cover":null,"text":"#include &lt;algorithm&gt; #include &lt;cctype&gt; #include &lt;cmath&gt; #include &lt;complex&gt; #include &lt;cstdio&gt; #include &lt;cstr...","link":"","photos":[],"count_time":{"symbolsCount":415,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"线性筛模版","uid":"a8700b1bec2379b19ad66ea321a2af93","slug":"线性筛模版","date":"2022-04-08T05:46:50.000Z","updated":"2022-04-16T14:44:55.990Z","comments":true,"path":"api/articles/线性筛模版.json","cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; using namespace std; int n,q,k,cnt; bool isprime[100000001]; int prime[100000001]; int main()&#123; cin&g...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"组合数","uid":"ca78808e8f9986ff3df37d5abc438425","slug":"组合数","date":"2022-04-07T15:22:59.000Z","updated":"2022-04-16T14:44:37.514Z","comments":true,"path":"api/articles/组合数.json","cover":null,"text":"int c[max_n][max_n]; for (int i&#x3D;0;i&lt;&#x3D;max_n;++i)&#123; for (int j&#x3D;0;j&lt;&#x3D;i;++j)&#123; if(i&#x3D;&#x3D;j||j&#x3D;&#x3D...","link":"","photos":[],"count_time":{"symbolsCount":249,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"进制转换","uid":"3a5edbaf2fab1786cda1ddc2eee70e29","slug":"进制转换","date":"2022-04-06T05:30:25.000Z","updated":"2022-04-06T06:07:18.808Z","comments":true,"path":"api/articles/进制转换.json","cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; using namespace std; int n,m,ans; void otp(int x)&#123; if(!x) return; otp(x&#x2F;m); char s&#x3D;x%m&gt;...","link":"","photos":[],"count_time":{"symbolsCount":659,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"算法讲解","uid":"5757d25a41334dab48eea89b5201dea3","slug":"算法讲解","date":"2022-04-05T07:34:09.000Z","updated":"2022-04-05T07:35:37.790Z","comments":true,"path":"api/articles/算法讲解.json","cover":null,"text":" 有向图强连通分量的Tarjan算法 https://byvoid.com/zhs/blog/scc-tarjan/ ","link":"","photos":[],"count_time":{"symbolsCount":59,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":2,"path":"api/categories/教程.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"集合","date":"2022-04-04T04:58:47.000Z","updated":"2022-04-04T05:02:22.012Z","comments":true,"path":"api/articles/集合.json","cover":null,"text":" 题目要求 Caima 给你了所有**[a,b]**范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 p的公共质因数，那么把它们所在的集合合并。重复如上操作，直到没有可以合并的集合为止。现在 Caima 想知道，最后有...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"},{"name":"埃尔筛法","slug":"埃尔筛法","count":1,"path":"api/tags/埃尔筛法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2022-04-03T10:34:08.000Z","updated":"2022-04-03T10:42:53.021Z","comments":true,"path":"api/articles/并查集.json","cover":null,"text":" 并查集 并查集是一种用来管理元素分组情况的数据结构，并查集可以高效地进行如下操作： 查询元素a和b是否属于同一组 合并元素a和b所在的组 int n;&#x2F;&#x2F;一共有n个数据 int fa[max_n+1];&#x2F;&#x2F;保存每个结点的父亲节点，其中根的...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"share","uid":"d78199dbabc681e201328dc8f8002dc2","slug":"share","date":"2022-01-22T09:06:40.000Z","updated":"2022-01-22T09:06:40.237Z","comments":true,"path":"api/articles/share.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"test","uid":"bc567916c4dc0d8169bd26d18e348d36","slug":"test","date":"2022-01-10T15:11:45.000Z","updated":"2022-01-10T15:35:15.715Z","comments":true,"path":"api/articles/test.json","cover":null,"text":":::tip 注意了，这是个tip ::: :::tip 标题 哈哈，自定义 ::: :::warning 警告一次！ ::: :::details 点开看看 你个傻逼 ::: ","link":"","photos":[],"count_time":{"symbolsCount":89,"symbolsTime":"1 mins."},"categories":[{"name":"测试","slug":"测试","count":1,"path":"api/categories/测试.json"}],"tags":[{"name":"开发者","slug":"开发者","count":3,"path":"api/tags/开发者.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"年度总结","uid":"6181be25ee551197b04a134e589faeae","slug":"my2021","date":"2021-12-31T13:12:12.000Z","updated":"2021-12-31T15:31:57.540Z","comments":true,"path":"api/articles/my2021.json","cover":null,"text":" 再见，2021 收获 走过了一年，虽然一路上坎坎坷坷，但还是有很多快乐和值得纪念的事情😙 我转专业成功了 从机类转到计算机相关专业，虽然转专业之后的部分课程并不是我想象中的那么美好，但我还是觉得幸运，感谢当时果断做决定的自己。 我参加了十四运会志愿者队伍 对于一个普通人而言，能...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"总结","slug":"总结","count":1,"path":"api/categories/总结.json"}],"tags":[{"name":"开发者","slug":"开发者","count":3,"path":"api/tags/开发者.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},{"title":"PTA数据结构08","uid":"b48181ff5fc549c282670b2e3976c524","slug":"PTA数据结构08","date":"2021-12-01T04:36:21.000Z","updated":"2021-12-31T15:00:08.319Z","comments":true,"path":"api/articles/PTA数据结构08.json","cover":null,"text":" 题目要求 ​ 因为一棵二叉树的遍历可以用堆栈来模拟，故现在通过输入模拟堆栈的出入栈过程，据此建立一棵二叉树，并将其后序遍历结果输出 Input Specification: 6 Push 1 Push 2 Push 3 Pop Pop Push 4 Pop Pop Push 5...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"题目集","slug":"题目集","count":2,"path":"api/categories/题目集.json"}],"tags":[{"name":"PTA","slug":"PTA","count":2,"path":"api/tags/PTA.json"},{"name":"树","slug":"树","count":1,"path":"api/tags/树.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}]}