{"title":"思维1500-1700","uid":"fdc2d967139f06c1554f41a568731c4c","slug":"思维1500-1700","date":"2022-11-15T00:26:17.000Z","updated":"2022-11-16T08:57:28.610Z","comments":true,"path":"api/articles/思维1500-1700.json","keywords":null,"cover":null,"content":"<h3 id=\"codeforces-823-div2-B-转换思想\"><a href=\"#codeforces-823-div2-B-转换思想\" class=\"headerlink\" title=\"codeforces#823-div2-B-转换思想\"></a>codeforces#823-div2-B-转换思想</h3><p>Q：一维坐标系有n个人，各自的坐标为$x_i$，每个人需要ti的时间才能出发，挑选一个地方集结问最少需要多长时间才能让所有人聚集到一个地方</p>\n<p>A：若每个人所需要的时间$t_i$都是0的话，则答案为$\\frac{x_{max}+x_{min}}{2}$,若用二元组$(x_i, t_i)$来表示每个人的状态的话$(x_i, t_i)$可以转化为$(x_i + t_i, 0)$和$(x_i - t_i, 0)$</p>\n<h3 id=\"codeforces-COMPFEST-14-G-数学归纳法找规律\"><a href=\"#codeforces-COMPFEST-14-G-数学归纳法找规律\" class=\"headerlink\" title=\"codeforces#COMPFEST 14-G-数学归纳法找规律\"></a>codeforces#<a href=\"https://codeforces.com/contest/1725\">COMPFEST 14</a>-G-数学归纳法找规律</h3><p>Q：对于一个三角形而言，求其中一条直角边的所有平方取值中第n小的一个</p>\n<p>A：设一条边为$a$，另一条边为$a+1$，所求值可以表示为$2a+1$, 设一条边为$a$另一条边为$a+2$，所求值可以表示为$4a+4$，这两个数一个是大于等于3的所有奇数，一个是大于等于8的所有4的倍数，观察其补集，对于模4得2的集合而言，由于任何平方数对4取模都只能得到0或1，所以$(b^2\\%4-a^2\\%4 + 4)\\%4$只会取到0，1，3所以该等价集被舍弃，通过暴力验证发现1和4得不到，接下来通过推公式或者二分即可得到答案</p>\n<h3 id=\"codeforces-817-div4-G-数学归纳法找规律\"><a href=\"#codeforces-817-div4-G-数学归纳法找规律\" class=\"headerlink\" title=\"codeforces#817-div4-G-数学归纳法找规律\"></a>codeforces#817-div4-G-数学归纳法找规律</h3><p>Q：构造一个长度为n，数字各不相同的数组，每个元素的最大值不可以超过$10^9$让这个数组异或和为0</p>\n<p>A：考虑由偶数开始的连续四个数字，他们的异或和为0，将n中是4的倍数的部分单独列出（从4开始枚举，123另用）如果$n\\%4==1$就添加0，如果$n\\%4 == 2$就先将序列任意一个数改成一个足够大的数，保证2进制状态下n个数的最高位都没有它高，</p>\n<p>取此时序列的异或和，添加此异或和即可，如果$n\\%4==3$添加123即可</p>\n<h3 id=\"codeforces-833-div2-C-贪心\"><a href=\"#codeforces-833-div2-C-贪心\" class=\"headerlink\" title=\"codeforces#833-div2-C-贪心\"></a>codeforces#833-div2-C-贪心</h3><p>Q：给出一段序列，序列中的0可以改成任意一个数，求尽可能的操作下，最多有多少个前缀和为0</p>\n<p>A：首先预处理出所有前缀和，考虑每个0，很明显每个0可以将其后面的前缀和相同的位置都变为0，但这样会让其他的0失去作用，所以正确的贪心是只改变到下一个0之前的这部分出现次数最多的前缀和，设当前0的下标为$i$，下一个0的下标为$j$，维护$[i, j)$之间的前缀和</p>\n","text":"codeforces#823-div2-B-转换思想Q：一维坐标系有n个人，各自的坐标为$x_i$，每个人需要ti的时间才能出发，挑选一个地方集结问最少需要多长时间才能让所有人聚集到一个地方 A：若每个人所需要的时间$t_i$都是0的话，则答案为$\\frac{x_{max}+x_...","link":"","photos":[],"count_time":{"symbolsCount":969,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#codeforces-823-div2-B-%E8%BD%AC%E6%8D%A2%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">codeforces#823-div2-B-转换思想</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#codeforces-COMPFEST-14-G-%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95%E6%89%BE%E8%A7%84%E5%BE%8B\"><span class=\"toc-text\">codeforces#COMPFEST 14-G-数学归纳法找规律</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#codeforces-817-div4-G-%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95%E6%89%BE%E8%A7%84%E5%BE%8B\"><span class=\"toc-text\">codeforces#817-div4-G-数学归纳法找规律</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#codeforces-833-div2-C-%E8%B4%AA%E5%BF%83\"><span class=\"toc-text\">codeforces#833-div2-C-贪心</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"dp入门","uid":"8b03c71c44a90bad729a0bac36f3314d","slug":"dp入门","date":"2022-11-15T00:32:38.000Z","updated":"2022-11-15T03:45:12.845Z","comments":true,"path":"api/articles/dp入门.json","keywords":null,"cover":null,"text":"线性dp技巧 概率相关的dp可以转化为计数dp 求最小值要全体赋值并初始化状态 dp构造方法：考虑题目每个要素是否可以作为枚举时的一个维度，考虑转移是否方便，复杂度等问题 贪心地进行转移：在转移过程中若当前状态可以有多种转移的手段，有时只需贪心的取其中的极端情况 求起点到终点，终...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"stl","uid":"cc7bcd220daea072f74b86bf01fbbc13","slug":"stl","date":"2022-11-15T00:22:26.000Z","updated":"2022-11-15T00:25:00.815Z","comments":true,"path":"api/articles/stl.json","keywords":null,"cover":null,"text":" bitset 利用类似intintint二进制的形式来储存01数组 ","link":"","photos":[],"count_time":{"symbolsCount":35,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}