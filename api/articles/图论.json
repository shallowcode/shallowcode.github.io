{"title":"图论","uid":"c22cd24b75d038ea9f473ae737d6b80c","slug":"图论","date":"2022-11-15T05:51:57.000Z","updated":"2022-11-16T13:33:55.848Z","comments":true,"path":"api/articles/图论.json","keywords":null,"cover":null,"content":"<h3 id=\"拓扑排序\"><a href=\"#拓扑排序\" class=\"headerlink\" title=\"拓扑排序\"></a>拓扑排序</h3><p>在DAG中找到一条遍历所有节点的路径，使得$i&lt;j$时,事件$a_i$不依赖于$a_j$（即不发生后者也可以发生前者）</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">queue&lt;int&gt;q;\nvector&lt;int&gt;edge[n];\nfor(int i&#x3D;0;i&lt;n;i++)  &#x2F;&#x2F;n  节点的总数\n    if(in[i]&#x3D;&#x3D;0) q.push(i);  &#x2F;&#x2F;将入度为0的点入队列\nvector&lt;int&gt;ans;   &#x2F;&#x2F;ans 为拓扑序列\nwhile(!q.empty())\n&#123;\n    int p&#x3D;q.front(); q.pop(); &#x2F;&#x2F; 选一个入度为0的点，出队列\n    ans.push_back(p);\n    for(int i&#x3D;0;i&lt;edge[p].size();i++)\n    &#123;\n        int y&#x3D;edge[p][i];\n        in[y]--;\n        if(in[y]&#x3D;&#x3D;0)\n            q.push(y);  \n    &#125;\n&#125;\nif(ans.size()&#x3D;&#x3D;n)   \n&#123;\n    for(int i&#x3D;0;i&lt;ans.size();i++)\n        printf( &quot;%d &quot;,ans[i] );\n    printf(&quot;\\n&quot;);\n&#125;\nelse printf(&quot;No Answer!\\n&quot;);   &#x2F;&#x2F;  ans 中的长度与n不相等，就说明无拓扑序列\n\n</code></pre>\n","text":"拓扑排序在DAG中找到一条遍历所有节点的路径，使得$i&lt;j$时,事件$a_i$不依赖于$a_j$（即不发生后者也可以发生前者） queue&lt;int&gt;q; vector&lt;int&gt;edge[n]; for(int i&#x3D;0;i&lt;n;i++)...","link":"","photos":[],"count_time":{"symbolsCount":796,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">拓扑排序</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"dp入门","uid":"8b03c71c44a90bad729a0bac36f3314d","slug":"dp入门","date":"2022-11-15T00:32:38.000Z","updated":"2022-11-15T03:45:12.845Z","comments":true,"path":"api/articles/dp入门.json","keywords":null,"cover":null,"text":"线性dp技巧 概率相关的dp可以转化为计数dp 求最小值要全体赋值并初始化状态 dp构造方法：考虑题目每个要素是否可以作为枚举时的一个维度，考虑转移是否方便，复杂度等问题 贪心地进行转移：在转移过程中若当前状态可以有多种转移的手段，有时只需贪心的取其中的极端情况 求起点到终点，终...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}