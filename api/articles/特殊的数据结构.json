{"title":"特殊的数据结构","uid":"cf16dcad745c39bc496f066c73c8929e","slug":"特殊的数据结构","date":"2022-05-21T14:49:59.000Z","updated":"2022-05-21T14:53:34.100Z","comments":true,"path":"api/articles/特殊的数据结构.json","keywords":null,"cover":null,"content":"<h3 id=\"维护序列中最小未出现过的非负整数支持插入查询删除\"><a class=\"markdownIt-Anchor\" href=\"#维护序列中最小未出现过的非负整数支持插入查询删除\"></a> 维护序列中最小未出现过的非负整数，支持插入，查询，删除</h3>\n<p>用一个数组记录每个数出现过的次数，用set维护一个按大小排列的未出现过数</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int cot[maxnum];\nset&lt;int&gt;st;\nint m;\nint op, x;\nvoid solve() &#123;\n\tfor (int i &#x3D; 0; i &lt; maxnum; i++)st.insert(i);\n\tcin &gt;&gt; m;\n\twhile (m--) &#123;\n\t\tcin &gt;&gt; op;\n\t\tif (op &#x3D;&#x3D; 0) &#123;\n\t\t\tcin &gt;&gt; x;\n\t\t\tif (cot[x] &#x3D;&#x3D; 0) &#123;\n\t\t\t\tst.erase(x);\n\t\t\t&#125;\n\t\t\tcot[x]++;\n\t\t&#125;\n\t\telse if (op &#x3D;&#x3D; 1) &#123;\n\t\t\tcout &lt;&lt; *st.begin() &lt;&lt; endl;\n\t\t&#125;\n\t\telse &#123;\n\t\t\tcin &gt;&gt; x;\n\t\t\tif (cot[x] &#x3D;&#x3D; 1) &#123;\n\t\t\t\tst.insert(x);\n\t\t\t&#125;\n\t\t\tcot[x]--;\n\t\t&#125;\n\t&#125;\n\n&#125;</code></pre>\n","text":" 维护序列中最小未出现过的非负整数，支持插入，查询，删除 用一个数组记录每个数出现过的次数，用set维护一个按大小排列的未出现过数 int cot[maxnum]; set&lt;int&gt;st; int m; int op, x; void solve() &#123; f...","link":"","photos":[],"count_time":{"symbolsCount":613,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%B4%E6%8A%A4%E5%BA%8F%E5%88%97%E4%B8%AD%E6%9C%80%E5%B0%8F%E6%9C%AA%E5%87%BA%E7%8E%B0%E8%BF%87%E7%9A%84%E9%9D%9E%E8%B4%9F%E6%95%B4%E6%95%B0%E6%94%AF%E6%8C%81%E6%8F%92%E5%85%A5%E6%9F%A5%E8%AF%A2%E5%88%A0%E9%99%A4\"><span class=\"toc-text\"> 维护序列中最小未出现过的非负整数，支持插入，查询，删除</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"cf-792-div1+2","uid":"ec879031a4be3590103f0fd58b750e46","slug":"cf-792-div1-2","date":"2022-05-20T15:40:39.000Z","updated":"2022-05-24T12:42:29.107Z","comments":true,"path":"api/articles/cf-792-div1-2.json","keywords":null,"cover":null,"text":" C 题意：给定一个矩阵，你可以将任意两列交换至多一次，问能否使矩阵每一行不下降 方法：读入矩阵，对每一行重新排序，若与原序列不同则加入有问题数组，数组长度大于2则不可能交换一次解决，否则将矩阵交换该两列，看是否满足答案 题意：给定一个2行n列的矩阵，可以任意交换两列，问能否使矩...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}