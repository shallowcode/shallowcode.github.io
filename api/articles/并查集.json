{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2022-04-03T10:34:08.000Z","updated":"2022-04-03T10:42:53.021Z","comments":true,"path":"api/articles/并查集.json","keywords":null,"cover":null,"content":"<h2 id=\"并查集\"><a class=\"markdownIt-Anchor\" href=\"#并查集\"></a> 并查集</h2>\n<p>并查集是一种用来管理元素分组情况的数据结构，并查集可以高效地进行如下操作：</p>\n<ul>\n<li>查询元素a和b是否属于同一组</li>\n<li>合并元素a和b所在的组</li>\n</ul>\n<pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">int n;&#x2F;&#x2F;一共有n个数据\n\nint fa[max_n+1];&#x2F;&#x2F;保存每个结点的父亲节点，其中根的父结点是自己\nint h[max_n+1];&#x2F;&#x2F;保存树的高度，避免退化影响复杂度\n\nvoid init()&#123;\n    for (int i&#x3D;1;i&lt;&#x3D;n;++i)&#123;\n        fa[i]&#x3D;i;\n    &#125;\n&#125;&#x2F;&#x2F;初始化每个节点的父节点是自己\n\nint find(int x)&#123;\n    if(fa[x]&#x3D;&#x3D;x) return x;\n    else return fa[x]&#x3D;find(fa[x]);\n&#125;&#x2F;&#x2F;找一个节点的根节点，顺便把自己直接连到根节点上\n\nvoid unit(int x,int y)&#123;\n    x&#x3D;find(x),y&#x3D;find(y);\n    if(x!&#x3D;y)&#123;\n        if(h[x]&lt;h[y]) fa[x]&#x3D;y;\n        else fa[y]&#x3D;x;\n        if(h[x]&#x3D;&#x3D;h[y]) h[x]++;\n    &#125;\n&#125;&#x2F;&#x2F;高度小的树作为高度大的树的子节点，树的高度在两树相等的时候更新</code></pre>\n","text":" 并查集 并查集是一种用来管理元素分组情况的数据结构，并查集可以高效地进行如下操作： 查询元素a和b是否属于同一组 合并元素a和b所在的组 int n;&#x2F;&#x2F;一共有n个数据 int fa[max_n+1];&#x2F;&#x2F;保存每个结点的父亲节点，其中根的...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":1,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E6%9F%A5%E9%9B%86\"><span class=\"toc-text\"> 并查集</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"share","uid":"d78199dbabc681e201328dc8f8002dc2","slug":"share","date":"2022-01-22T09:06:40.000Z","updated":"2022-01-22T09:06:40.237Z","comments":true,"path":"api/articles/share.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}