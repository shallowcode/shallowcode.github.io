{"title":"cf-785-div2","uid":"e24161b022b99e01e5ff1a820d3ba3c0","slug":"cf-785-div2","date":"2022-05-02T01:26:10.000Z","updated":"2022-05-02T07:09:54.445Z","comments":true,"path":"api/articles/cf-785-div2.json","keywords":null,"cover":null,"content":"<h2 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C\"></a>C</h2><h4 id=\"题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示\"><a href=\"#题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示\" class=\"headerlink\" title=\"题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示\"></a>题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示</h4><h4 id=\"方法：\"><a href=\"#方法：\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><p>先枚举回文数</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">bool check(int x)&#123;\n  int n&#x3D;0,xx&#x3D;x;\n    while(x)&#123;\n        n&#x3D;n*10+s%10;\n        x&#x2F;&#x3D;10;\n    &#125;\n  \tif(x&#x3D;&#x3D;n) return 1;\n  \telse return 0;\n&#125;\nvector&lt;int&gt; mp;\nif(check(k))mp.oush)back(k);</code></pre>\n<p>然后动态规划，$dp(i)(j)$代表用前j个数拼成i的方案有多少种</p>\n<script type=\"math/tex; mode=display\">\ndp[i][j]={\\begin{cases}\n \\qquad1\\\\ \n dp[i][j-1]\\\\ \n dp[i][j-1]+dp[i-mp[j]][j]\n\\end{cases}}</script><h2 id=\"D\"><a href=\"#D\" class=\"headerlink\" title=\"D\"></a>D</h2><h4 id=\"题意：已知给出一个等差数列的首项，公差，项数可以知道其全部信息，给出两个等差数列B，C的信息，已知C是B与另一等差数列A的共同元素组成的等差数列，求A可能的数目，其中数目为0，无穷大时要特判\"><a href=\"#题意：已知给出一个等差数列的首项，公差，项数可以知道其全部信息，给出两个等差数列B，C的信息，已知C是B与另一等差数列A的共同元素组成的等差数列，求A可能的数目，其中数目为0，无穷大时要特判\" class=\"headerlink\" title=\"题意：已知给出一个等差数列的首项，公差，项数可以知道其全部信息，给出两个等差数列B，C的信息，已知C是B与另一等差数列A的共同元素组成的等差数列，求A可能的数目，其中数目为0，无穷大时要特判\"></a>题意：已知给出一个等差数列的首项，公差，项数可以知道其全部信息，给出两个等差数列B，C的信息，已知C是B与另一等差数列A的共同元素组成的等差数列，求A可能的数目，其中数目为0，无穷大时要特判</h4><h4 id=\"方法：-1\"><a href=\"#方法：-1\" class=\"headerlink\" title=\"方法：\"></a>方法：</h4><p>若不满足以下条件，则A的数目为0</p>\n<ul>\n<li>C被B完全覆盖</li>\n<li>C的公差是B的公差的倍数</li>\n<li>C的某一项要和B的第一项相同</li>\n</ul>\n<p>在A的数目不为0的前提下，若满足以下条件之一，则A的数目为无穷多个</p>\n<ul>\n<li>B的第一项大于C的第一项的前一项</li>\n<li>B的最后一项小于C的最后一项的后一项</li>\n</ul>\n<p>在满足A的数目不为无穷多个时，发现A的第一项必须要大于C的第一项的前一项，最后一项同理，同时仍要满足</p>\n<p>$lcm(p,q)=r$以及$(c-a)mod p=0$,枚举r的所有因数，则最终结果为$ans=\\sum_{lcm(p,q)=r}(\\frac{r}{p})^2$</p>\n","text":"C题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示方法：先枚举回文数 bool check(int x)&#123; int n&#x3D;0,xx&#x3D;x; while(x)&#123; n&#x3D;n*10+s%10; x&#x2F;&#...","link":"","photos":[],"count_time":{"symbolsCount":775,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#C\"><span class=\"toc-text\">C</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E6%84%8F%EF%BC%9A%E7%BB%99%E5%87%BA%E4%B8%80%E4%B8%AA%E6%95%B0n%EF%BC%8Cn%E5%8F%AF%E4%BB%A5%E7%94%A8%E8%8B%A5%E5%B9%B2%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%BD%A2%E5%BC%8F%E8%A1%A8%E7%A4%BA%E5%87%BA%E6%9D%A5%EF%BC%8C%E6%B1%82%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E6%96%B9%E6%B3%95%E6%9D%A5%E8%A1%A8%E7%A4%BA\"><span class=\"toc-text\">题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">方法：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#D\"><span class=\"toc-text\">D</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E6%84%8F%EF%BC%9A%E5%B7%B2%E7%9F%A5%E7%BB%99%E5%87%BA%E4%B8%80%E4%B8%AA%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E7%9A%84%E9%A6%96%E9%A1%B9%EF%BC%8C%E5%85%AC%E5%B7%AE%EF%BC%8C%E9%A1%B9%E6%95%B0%E5%8F%AF%E4%BB%A5%E7%9F%A5%E9%81%93%E5%85%B6%E5%85%A8%E9%83%A8%E4%BF%A1%E6%81%AF%EF%BC%8C%E7%BB%99%E5%87%BA%E4%B8%A4%E4%B8%AA%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97B%EF%BC%8CC%E7%9A%84%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%B7%B2%E7%9F%A5C%E6%98%AFB%E4%B8%8E%E5%8F%A6%E4%B8%80%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97A%E7%9A%84%E5%85%B1%E5%90%8C%E5%85%83%E7%B4%A0%E7%BB%84%E6%88%90%E7%9A%84%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%EF%BC%8C%E6%B1%82A%E5%8F%AF%E8%83%BD%E7%9A%84%E6%95%B0%E7%9B%AE%EF%BC%8C%E5%85%B6%E4%B8%AD%E6%95%B0%E7%9B%AE%E4%B8%BA0%EF%BC%8C%E6%97%A0%E7%A9%B7%E5%A4%A7%E6%97%B6%E8%A6%81%E7%89%B9%E5%88%A4\"><span class=\"toc-text\">题意：已知给出一个等差数列的首项，公差，项数可以知道其全部信息，给出两个等差数列B，C的信息，已知C是B与另一等差数列A的共同元素组成的等差数列，求A可能的数目，其中数目为0，无穷大时要特判</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A-1\"><span class=\"toc-text\">方法：</span></a></li></ol></li></ol></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"算法竞赛入门经典","uid":"3f75e6c48899ccc9cfffa214dd7d68de","slug":"算法竞赛入门经典","date":"2022-05-02T13:26:37.000Z","updated":"2022-05-02T13:34:28.326Z","comments":true,"path":"api/articles/算法竞赛入门经典.json","keywords":null,"cover":null,"text":"1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串暴力思路：检查所有偶数长度的子串，检查其是否为前缀后缀相同的子串 优化思路：由于求字典序，只需判断当前字符串的所有后缀子串是否满足条件，从左往右推进，检查当前字符串 int n,...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"二叉堆","uid":"1f95e29524cb1fc8f16f7dbdf365181a","slug":"二叉堆","date":"2022-04-27T06:23:23.000Z","updated":"2022-04-27T06:34:35.691Z","comments":true,"path":"api/articles/二叉堆.json","keywords":null,"cover":null,"text":"&#x2F;&#x2F;手动实现 void shift(int i)&#123; while(1)&#123; int l&#x3D;2*i; if(l&lt;&#x3D;len-1&amp;&amp;a[l]&gt;a[l+1])l++; if(l&gt;len||a[i]&l...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}