{"title":"二叉堆","uid":"1f95e29524cb1fc8f16f7dbdf365181a","slug":"二叉堆","date":"2022-04-27T06:23:23.000Z","updated":"2022-04-27T06:34:35.691Z","comments":true,"path":"api/articles/二叉堆.json","keywords":null,"cover":null,"content":"<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;手动实现\nvoid shift(int i)&#123;\n    while(1)&#123;\n        int l&#x3D;2*i;\n        if(l&lt;&#x3D;len-1&amp;&amp;a[l]&gt;a[l+1])l++;\n        if(l&gt;len||a[i]&lt;a[l]) break;\n        swap(a[i],a[l]);\n        i&#x3D;l;\n    &#125;\n&#125;\na[0]&#x3D;-1;&#x2F;&#x2F;堆的最顶层是最小的或者最大的\n    while(n--)&#123;\n        cin&gt;&gt;op;\n        if(op&#x3D;&#x3D;1)&#123;\n            cin&gt;&gt;x;a[++len]&#x3D;x;\n            int i&#x3D;len;\n            while(a[i]&lt;a[i&#x2F;2])&#123;\n                swap(a[i],a[i&#x2F;2]);\n                i&#x2F;&#x3D;2;\n            &#125;\n        &#125;&#x2F;&#x2F;新加入节点，放到最后一个，依次和父节点比较\n        else if(op&#x3D;&#x3D;2)&#123;\n            cout&lt;&lt;a[1]&lt;&lt;endl;\n        &#125;\n        else&#123;\n            swap(a[1],a[len--]);\n            for (int i&#x3D;len&#x2F;2;i&gt;&#x3D;1;--i)&#123;\n                shift(i);\n            &#125;\n        &#125;&#x2F;&#x2F;对于删除节点，将第一个元素和最后一个元素交换，然后从该节点的父节点一直到第一个节点依次向下更新\n    &#125;</code></pre>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;实现堆的简单方法-优先队列\n#include&lt;bits&#x2F;stdc++.h&gt;\n#define ll long long\nusing namespace std;\nint n,op,x;\npriority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q;\nint main()&#123;\n    &#x2F;&#x2F;freopen(&quot;1&quot;,&quot;r&quot;,stdin);freopen(&quot;2&quot;,&quot;w&quot;,stdout);\n    ios::sync_with_stdio(false);cin.tie(0);\n    cin&gt;&gt;n;\n    while(n--)&#123;\n        cin&gt;&gt;op;\n        if(op&#x3D;&#x3D;1)&#123;cin&gt;&gt;x;q.push(x);&#125;\n        else if(op&#x3D;&#x3D;2) cout&lt;&lt;q.top()&lt;&lt;endl;\n        else q.pop();\n    &#125;\n&#125;</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">priority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt;小根堆\npriority_queue&lt;int&gt;大根堆\nq.top()&#x2F;&#x2F;取得堆顶元素，并不会弹出\nq.pop()&#x2F;&#x2F;弹出堆顶元素\nq.push()&#x2F;&#x2F;往堆里面插入一个元素\nq.empty()&#x2F;&#x2F;查询堆是否为空，为空则返回1否则返回0\nq.size()&#x2F;&#x2F;查询堆内元素数量</code></pre>\n","text":"&#x2F;&#x2F;手动实现 void shift(int i)&#123; while(1)&#123; int l&#x3D;2*i; if(l&lt;&#x3D;len-1&amp;&amp;a[l]&gt;a[l+1])l++; if(l&gt;len||a[i]&l...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"cf-785-div2","uid":"e24161b022b99e01e5ff1a820d3ba3c0","slug":"cf-785-div2","date":"2022-05-02T01:26:10.000Z","updated":"2022-05-02T07:09:54.445Z","comments":true,"path":"api/articles/cf-785-div2.json","keywords":null,"cover":null,"text":"C题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示方法：先枚举回文数 bool check(int x)&#123; int n&#x3D;0,xx&#x3D;x; while(x)&#123; n&#x3D;n*10+s%10; x&#x2F;&#...","link":"","photos":[],"count_time":{"symbolsCount":775,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"cf-783-div2","uid":"fa4d4536e5d7115952b0289a4a257f8c","slug":"cf-783-div2","date":"2022-04-20T03:13:31.000Z","updated":"2022-04-20T06:57:51.333Z","comments":true,"path":"api/articles/cf-783-div2.json","keywords":null,"cover":[],"text":"C题意：给出长度为的序列,长度为的序列中初始值全是,每次操作可以让加上或者减去,问最少操作多少次才能使变成一个严格单调递增的序列.方法：贪心的考虑，最终数组一定会有0存在，枚举0的位置，依次计算达到严格单调递增所需要移动的次数int main()&#123; n&#x3D;rea...","link":"","photos":[],"count_time":{"symbolsCount":846,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}