{"title":"算法竞赛入门经典","uid":"3f75e6c48899ccc9cfffa214dd7d68de","slug":"算法竞赛入门经典","date":"2022-05-02T13:26:37.000Z","updated":"2022-05-02T13:34:28.326Z","comments":true,"path":"api/articles/算法竞赛入门经典.json","keywords":null,"cover":null,"content":"<h4 id=\"1如果一个字符串不存在两个相邻的重复子串则字符串满足题意求用前l个字母构成的字典序排第n的子串\"><a class=\"markdownIt-Anchor\" href=\"#1如果一个字符串不存在两个相邻的重复子串则字符串满足题意求用前l个字母构成的字典序排第n的子串\"></a> 1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串</h4>\n<p>暴力思路：检查所有偶数长度的子串，检查其是否为前缀后缀相同的子串</p>\n<p>优化思路：由于求字典序，只需判断当前字符串的所有后缀子串是否满足条件，从左往右推进，检查当前字符串</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int n,l,cnt;\nint a[100000];\nint dfs(int m)&#123;\n    if(cnt++&#x3D;&#x3D;n)&#123;\n        for (int i&#x3D;0;i&lt;m;++i)&#123;\n            cout&lt;&lt;(char)(&#39;A&#39;+a[i]);\n        &#125;\n        return 0;&#x2F;&#x2F;return 0代表已经找到字典序排第m的子串\n    &#125;\n    else&#123;\n        for (int i&#x3D;0;i&lt;l;++i)&#123;\n            a[m]&#x3D;i;\n            int ret&#x3D;1;&#x2F;&#x2F;判断当前串是否是想要的，即所有后缀子串均不合法\n            for (int j&#x3D;1;2*j&lt;&#x3D;m+1;++j)&#123;\n                int ok&#x3D;1;&#x2F;&#x2F;判断当前后缀子串是否合法，若合法则当前串不是想要的\n                for (int k&#x3D;0;k&lt;j;++k)&#123;\n                    if(a[m-k]!&#x3D;a[m-k-j])&#123;ok&#x3D;0;break;&#125;&#x2F;&#x2F;肯定不合法\n                &#125;\n                if(ok)&#123;ret&#x3D;0;break;&#125;\n            &#125;\n            if(ret)&#123;\n                if(!dfs(m+1))return 0;\n            &#125;\n        &#125;\n        return 1;\n    &#125;\n&#125;</code></pre>\n","text":" 1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串 暴力思路：检查所有偶数长度的子串，检查其是否为前缀后缀相同的子串 优化思路：由于求字典序，只需判断当前字符串的所有后缀子串是否满足条件，从左往右推进，检查当前字符串 int ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8D%E5%AD%98%E5%9C%A8%E4%B8%A4%E4%B8%AA%E7%9B%B8%E9%82%BB%E7%9A%84%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E5%88%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BB%A1%E8%B6%B3%E9%A2%98%E6%84%8F%E6%B1%82%E7%94%A8%E5%89%8Dl%E4%B8%AA%E5%AD%97%E6%AF%8D%E6%9E%84%E6%88%90%E7%9A%84%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E7%AC%ACn%E7%9A%84%E5%AD%90%E4%B8%B2\"><span class=\"toc-text\"> 1.如果一个字符串不存在两个相邻的重复子串，则字符串满足题意，求用前L个字母构成的，字典序排第n的子串</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"技巧","uid":"c415bd8a15236b765141e56b25f1f835","slug":"技巧","date":"2022-05-11T15:58:56.000Z","updated":"2022-10-05T12:45:47.285Z","comments":true,"path":"api/articles/技巧.json","keywords":null,"cover":null,"text":"$ 用逻辑尺来暴力枚举对于n个状态的取舍的2^n种情况 $ for (int i&#x3D;0;i&lt;(1&lt;&lt;n);++i)&#123; for (int j&#x3D;0;j&lt;n;++i)&#123; if(i&lt;&lt;j&amp;1)&#123; ...","link":"","photos":[],"count_time":{"symbolsCount":865,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"cf-785-div2","uid":"e24161b022b99e01e5ff1a820d3ba3c0","slug":"cf-785-div2","date":"2022-05-02T01:26:10.000Z","updated":"2022-05-02T07:09:54.445Z","comments":true,"path":"api/articles/cf-785-div2.json","keywords":null,"cover":null,"text":" C 题意：给出一个数n，n可以用若干回文数之和的形式表示出来，求有多少种方法来表示 方法： 先枚举回文数 bool check(int x)&#123; int n&#x3D;0,xx&#x3D;x; while(x)&#123; n&#x3D;n*10+s%10; x&#x2...","link":"","photos":[],"count_time":{"symbolsCount":978,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}