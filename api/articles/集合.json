{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"集合","date":"2022-04-04T04:58:47.000Z","updated":"2022-04-04T05:02:22.012Z","comments":true,"path":"api/articles/集合.json","keywords":null,"cover":null,"content":"<h2 id=\"题目要求\"><a href=\"#题目要求\" class=\"headerlink\" title=\"题目要求\"></a>题目要求</h2><p>Caima 给你了所有<strong>[a,b]</strong>范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 <strong>p</strong>的公共质因数，那么把它们所在的集合合并。重复如上操作，直到没有可以合并的集合为止。现在 Caima 想知道，最后有多少个集合。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>一行三个整数,a,b,p</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>一个数，最终的集合数</p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;bits&#x2F;stdc++.h&gt;\nusing namespace std;\nint a,b,p;\nint fa[100001];\nbool prime[100001];\nint find(int x)&#123;\n    return fa[x]&#x3D;&#x3D;x?x:fa[x]&#x3D;find(fa[x]);\n&#125;\nint main()&#123;\n    cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;\n    int ans&#x3D;b-a+1;\n    for (int i&#x3D;a;i&lt;&#x3D;b;++i)&#123;\n        fa[i]&#x3D;i;\n    &#125;\n    for (int i&#x3D;2;i&lt;&#x3D;b;++i)&#123;\n        if(!prime[i])&#123;\n            if(i&gt;&#x3D;p)&#123;\n                for (int j&#x3D;2*i;j&lt;&#x3D;b;j+&#x3D;i)&#123;\n                    prime[j]&#x3D;true;\n                    if(j-i&gt;&#x3D;a&amp;&amp;find(j-i)!&#x3D;find(j))&#123;\n                        ans--;\n                        fa[find(j)]&#x3D;find(j-i);\n                    &#125;\n                &#125;\n            &#125;\n            else&#123;\n                for (int j&#x3D;2*i;j&lt;&#x3D;b;j+&#x3D;i)&#123;\n                    prime[j]&#x3D;true;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n    cout&lt;&lt;ans;\n&#125;</code></pre>\n","text":"题目要求Caima 给你了所有[a,b]范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 p的公共质因数，那么把它们所在的集合合并。重复如上操作，直到没有可以合并的集合为止。现在 Caima 想知道，最后有多少个集合。...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"},{"name":"埃尔筛法","slug":"埃尔筛法","count":1,"path":"api/tags/埃尔筛法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">题目要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">输入格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">输出格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">源代码</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"算法讲解","uid":"5757d25a41334dab48eea89b5201dea3","slug":"算法讲解","date":"2022-04-05T07:34:09.000Z","updated":"2022-04-05T07:35:37.790Z","comments":true,"path":"api/articles/算法讲解.json","keywords":null,"cover":null,"text":"有向图强连通分量的Tarjan算法https://byvoid.com/zhs/blog/scc-tarjan/ ","link":"","photos":[],"count_time":{"symbolsCount":57,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":2,"path":"api/categories/教程.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"并查集","uid":"c18469ab20e7b093d36b4a61728d07eb","slug":"并查集","date":"2022-04-03T10:34:08.000Z","updated":"2022-07-22T12:07:10.748Z","comments":true,"path":"api/articles/并查集.json","keywords":null,"cover":null,"text":"并查集意义： 可以表示某一类东西是同种类，可以表示连通块，可以表示某几件事情有关系，具体什么关系再设计一个维度计算 食物链中的带权并查集，如果两个动物有关系，就划分到同一区域，具体什么关系再推导一下 01字符串的某一子串的含1数量是奇数还是偶数，可以利用前缀的思想分成两段，则如果...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}