{"title":"算法讲解","uid":"5757d25a41334dab48eea89b5201dea3","slug":"算法讲解","date":"2022-04-05T07:34:09.000Z","updated":"2022-04-05T07:35:37.790Z","comments":true,"path":"api/articles/算法讲解.json","keywords":null,"cover":null,"content":"<h3 id=\"有向图强连通分量的Tarjan算法\"><a href=\"#有向图强连通分量的Tarjan算法\" class=\"headerlink\" title=\"有向图强连通分量的Tarjan算法\"></a>有向图强连通分量的Tarjan算法</h3><p><a href=\"https://byvoid.com/zhs/blog/scc-tarjan/\">https://byvoid.com/zhs/blog/scc-tarjan/</a></p>\n","text":"有向图强连通分量的Tarjan算法https://byvoid.com/zhs/blog/scc-tarjan/ ","link":"","photos":[],"count_time":{"symbolsCount":57,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":2,"path":"api/categories/教程.json"}],"tags":[{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%90%91%E5%9B%BE%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%E7%9A%84Tarjan%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">有向图强连通分量的Tarjan算法</span></a></li></ol>","author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}},"mapped":true,"prev_post":{"title":"进制转换","uid":"3a5edbaf2fab1786cda1ddc2eee70e29","slug":"进制转换","date":"2022-04-06T05:30:25.000Z","updated":"2022-04-06T06:07:18.808Z","comments":true,"path":"api/articles/进制转换.json","keywords":null,"cover":null,"text":"#include&lt;bits&#x2F;stdc++.h&gt; using namespace std; int n,m,ans; void otp(int x)&#123; if(!x) return; otp(x&#x2F;m); char s&#x3D;x%m&gt;...","link":"","photos":[],"count_time":{"symbolsCount":659,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}},"next_post":{"title":"集合","uid":"be4fadc0757b3a2eeaefd20302787665","slug":"集合","date":"2022-04-04T04:58:47.000Z","updated":"2022-04-04T05:02:22.012Z","comments":true,"path":"api/articles/集合.json","keywords":null,"cover":null,"text":"题目要求Caima 给你了所有[a,b]范围内的整数。一开始每个整数都属于各自的集合。每次你需要选择两个属于不同集合的整数，如果这两个整数拥有大于等于 p的公共质因数，那么把它们所在的集合合并。重复如上操作，直到没有可以合并的集合为止。现在 Caima 想知道，最后有多少个集合。...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"程序设计","slug":"程序设计","count":2,"path":"api/categories/程序设计.json"}],"tags":[{"name":"并查集","slug":"并查集","count":2,"path":"api/tags/并查集.json"},{"name":"埃尔筛法","slug":"埃尔筛法","count":1,"path":"api/tags/埃尔筛法.json"}],"author":{"name":"shallow","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/e34cf65a5d76470da93ba82bf95b3745.png","link":"/","description":"我并非生来勇敢，天赋过人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/475614133/dynamic"},"github":{"icon":"/svg/github.svg","link":"https://github.com/shallowcode"},"zhihu":{"icon":"/svg/zhihu.svg","link":"https://www.zhihu.com/people/qian-meng-9-42-73"}}}}}}